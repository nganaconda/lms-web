# Generated by Django 4.2.13 on 2024-07-30 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Attributes',
            },
        ),
        migrations.CreateModel(
            name='ClassPerformance',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ClassPerformances',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('difficulty', models.IntegerField()),
                ('attributes', models.ManyToManyField(related_name='questions', to='core.attribute')),
            ],
            options={
                'db_table': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='StudentPerformance',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.FloatField()),
            ],
            options={
                'db_table': 'StudentPerformances',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.IntegerField()),
                ('age', models.IntegerField()),
                ('type', models.CharField(max_length=100)),
                ('questions_no', models.IntegerField()),
                ('questions_dif', models.IntegerField()),
                ('questions', models.ManyToManyField(related_name='tests', to='core.question')),
            ],
            options={
                'db_table': 'Tests',
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('department', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Professors',
            },
            bases=('core.users',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('reg_number', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
            ],
            options={
                'db_table': 'Students',
            },
            bases=('core.users',),
        ),
        migrations.CreateModel(
            name='TestScore',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result', models.FloatField()),
                ('class_performance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_scores', to='core.classperformance')),
                ('student_performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_scores', to='core.studentperformance')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_scores', to='core.test')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_scores', to='core.student')),
            ],
            options={
                'db_table': 'TestScores',
            },
        ),
        migrations.AddField(
            model_name='studentperformance',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='core.student'),
        ),
        migrations.AddField(
            model_name='classperformance',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_performances', to='core.professor'),
        ),
    ]
